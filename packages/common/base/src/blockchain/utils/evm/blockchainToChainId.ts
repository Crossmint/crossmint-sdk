import type { EVMBlockchainIncludingTestnet } from "../../types/evm";

export const BLOCKCHAIN_TO_CHAIN_ID: Record<EVMBlockchainIncludingTestnet, number> = {
    ethereum: 1,
    polygon: 137,
    bsc: 56,
    optimism: 10,
    arbitrum: 42161,
    base: 8453,
    zora: 7777777,
    arbitrumnova: 42170,
    "ethereum-sepolia": 11155111,
    "ethereum-goerli": 5,
    "polygon-mumbai": 80001,
    "polygon-amoy": 80002,
    "bsc-testnet": 97,
    "optimism-sepolia": 11155420,
    "optimism-goerli": 420,
    "base-goerli": 84531,
    "base-sepolia": 84532,
    "arbitrum-sepolia": 421614,
    "zora-sepolia": 999999999,
    "zora-goerli": 999,
    zkatana: 1261120,
    zkyoto: 6038361,
    "astar-zkevm": 3776,
    "hypersonic-testnet": 675852,
    "story-testnet": 1513,
    story: 1514,
    "mode-sepolia": 919,
    mode: 34443,
    chiliz: 88888,
    shape: 360,
    "world-chain": 480,
    abstract: 11124,
    apechain: 33139,
    mantle: 5000,
    scroll: 534352,
    "sei-pacific-1": 1329,
    "abstract-testnet": 11155111,
    curtis: 33111,
    "mantle-sepolia": 5003,
    "scroll-sepolia": 534351,
    "sei-atlantic-2-testnet": 1328,
    "world-chain-sepolia": 4801,
    flow: 1230,
    "flow-testnet": 1231,
    plume: 98865,
    "plume-testnet": 161221135,
};

export function blockchainToChainId(blockchain: EVMBlockchainIncludingTestnet) {
    return BLOCKCHAIN_TO_CHAIN_ID[blockchain];
}
